package AtHome;

import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;

public class Map {
    public static void main(String[] args) {


        // =========================
        // üîπ 1. –ë–∞–∑–æ–≤–æ–µ (HashMap ‚Äî —Å—Ç—É–¥–µ–Ω—Ç—ã)
        // =========================
        HashMap<String, Integer> students = new HashMap<>();
        students.put("Jafar", 20);
        students.put("Cemil", 22);
        students.put("Nicat", 19);
        students.put("Sehriyar", 23);
        students.put("Ugur", 21);

        // –í—ã–≤–µ—Å—Ç–∏ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        for (Map.Entry<String, Integer> entry : students.entrySet()) {
            System.out.println(entry.getKey() + " -> " + entry.getValue());
        }

        // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Alice
        System.out.println("–ï—Å—Ç—å –ª–∏ Alice? " + students.containsKey("Alice"));

        // –£–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
        students.remove("Charlie");
        System.out.println("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: " + students);




        // =========================
        // üîπ 2. –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å (LinkedHashMap ‚Äî –≥–æ—Ä–æ–¥–∞)
        // =========================
        LinkedHashMap<Integer, String> cities = new LinkedHashMap<>();
        cities.put(1, "Baku");
        cities.put(2, "Moscow");
        cities.put(3, "London");
        cities.put(4, "New York");
        cities.put(5, "Tokyo");

        System.out.println("–ì–æ—Ä–æ–¥–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: " + cities);
        System.out.println("–ö–ª—é—á–∏: " + cities.keySet());
        System.out.println("–ó–Ω–∞—á–µ–Ω–∏—è: " + cities.values());


        // =========================
        // üîπ 3. TreeMap (—Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞)
        // =========================
        TreeMap<Integer, String> phones = new TreeMap<>();
        phones.put(555123, "Nijat");
        phones.put(555222, "Cemil");
        phones.put(555111, "Jafar");
        phones.put(555333, "Sehriyar");
        phones.put(555444, "Ugur");

        System.out.println("–í—Å–µ –∑–∞–ø–∏—Å–∏: " + phones);
        System.out.println("–ü–µ—Ä–≤—ã–π: " + phones.firstEntry());
        System.out.println("–ü–æ—Å–ª–µ–¥–Ω–∏–π: " + phones.lastEntry());
        System.out.println("–í—ã—à–µ 555222: " + phones.higherEntry(555222));
        System.out.println("–ù–∏–∂–µ 555222: " + phones.lowerEntry(555222));


        // =========================
        // üîπ 4. Map.Entry (–æ—Ü–µ–Ω–∫–∏)
        // =========================
        HashMap<String, Integer> grades = new HashMap<>();
        grades.put("Math", 4);
        grades.put("Physics", 5);
        grades.put("History", 3);
        grades.put("Biology", 5);

        System.out.println("–û—Ü–µ–Ω–∫–∏ > 4:");
        for (Map.Entry<String, Integer> entry : grades.entrySet()) {
            if (entry.getValue() > 4) {
                System.out.println(entry.getKey() + " -> " + entry.getValue());
            }
        }

        // –ø–æ–≤—ã—Å–∏—Ç—å Math
        for (Map.Entry<String, Integer> entry : grades.entrySet()) {
            if (entry.getKey().equals("Math")) {
                entry.setValue(entry.getValue() + 1);
            }
        }
        System.out.println("–ü–æ—Å–ª–µ –ø–æ–≤—ã—à–µ–Ω–∏—è Math: " + grades);


        // =========================
        // üîπ 5. –¢–≤–æ—Ä—á–µ—Å–∫–æ–µ (—Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤)
        // =========================
        HashMap<String, String> dictionary = new HashMap<>();
        dictionary.put("apple", "—è–±–ª–æ–∫–æ");
        dictionary.put("book", "–∫–Ω–∏–≥–∞");
        dictionary.put("dog", "—Å–æ–±–∞–∫–∞");
        dictionary.put("cat", "–∫–æ—Ç");
        dictionary.put("house", "–¥–æ–º");
        dictionary.put("sun", "—Å–æ–ª–Ω—Ü–µ");
        dictionary.put("moon", "–ª—É–Ω–∞");
        dictionary.put("car", "–º–∞—à–∏–Ω–∞");
        dictionary.put("tree", "–¥–µ—Ä–µ–≤–æ");
        dictionary.put("water", "–≤–æ–¥–∞");

        Scanner sc = new Scanner(System.in);
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ: ");
        String word = sc.nextLine();

        if (dictionary.containsKey(word)) {
            System.out.println("–ü–µ—Ä–µ–≤–æ–¥: " + dictionary.get(word));
        } else {
            System.out.println("–ü–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }
    }
}